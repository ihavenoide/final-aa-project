"""empty message

Revision ID: 324ff42da6d9
Revises:
Create Date: 2023-07-12 17:21:18.689740

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '324ff42da6d9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('image', sa.String(length=225), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=15), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE folders SET SCHEMA {SCHEMA};")

    op.create_table('sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=15), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('draft', sa.Boolean(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE sets SET SCHEMA {SCHEMA};")

    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=225), nullable=False),
    sa.Column('answer', sa.String(length=225), nullable=False),
    sa.Column('setId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['setId'], ['sets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE cards SET SCHEMA {SCHEMA};")

    op.create_table('ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('setId', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['setId'], ['sets.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE ratings SET SCHEMA {SCHEMA};")

    op.create_table('set_folders',
    sa.Column('setId', sa.Integer(), nullable=False),
    sa.Column('folderId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['folderId'], ['folders.id'], ),
    sa.ForeignKeyConstraint(['setId'], ['sets.id'], ),
    sa.PrimaryKeyConstraint('setId', 'folderId')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE set_folders SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('set_folders')
    op.drop_table('rating')
    op.drop_table('cards')
    op.drop_table('sets')
    op.drop_table('folders')
    op.drop_table('users')
    # ### end Alembic commands ###
